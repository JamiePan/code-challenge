# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - main.tf
      - pipelines/terraform-azure-pipelines.yaml
    exclude:
      - helm-chart
      - pipelines/helm-chart-azure-pipelines.yaml

pool:
  vmImage: ubuntu-latest

variables:
- group: azure_credentials

stages:
- stage:  Validate
  displayName: Validate
  jobs:
  - job: validate
    pool:
      name: jamie-local-pool
    steps:
    - task: TerraformTaskV4@4
      displayName: Terraform init
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'Jamie-Azure-Service-Connection'
        backendAzureRmResourceGroupName: 'jamie-code-challenge'
        backendAzureRmStorageAccountName: 'jamietfstatebackend'
        backendAzureRmContainerName: 'tf-backend'
        backendAzureRmKey: 'terraform.tfstate'
# - stage: Plan
#   displayName: Terraform Plan
#   dependsOn: Validate
#   jobs:
#     - deployment: plan
#       pool:
#         name: jamie-local-pool
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#             - task: TerraformTaskV4@4
#               displayName: Terraform plan
#               inputs:
#                 provider: 'azurerm'
#                 command: 'plan'
#                 environmentServiceNameAzureRM: 'Jamie-Azure-Service-Connection'
- stage: Plan
  displayName: Terraform Plan
  dependsOn: Validate
  jobs:
  - job: Plan
    pool:
      name: jamie-local-pool
    steps:
    - task: TerraformTaskV4@4
      displayName: Terraform plan
      inputs:
        provider: 'azurerm'
        command: 'plan'
        environmentServiceNameAzureRM: 'Jamie-Azure-Service-Connection'
- stage: Apply
  displayName: Terraform Apply
  dependsOn: Plan
  jobs:
    - deployment: deploy
      pool:
        name: jamie-local-pool
      environment: myapp-dev
      strategy:
        runOnce:
          deploy:
            steps:
            - task: TerraformTaskV4@4
              displayName: Terraform apply
              inputs:
                provider: 'azurerm'
                command: 'apply'
                environmentServiceNameAzureRM: 'Jamie-Azure-Service-Connection'